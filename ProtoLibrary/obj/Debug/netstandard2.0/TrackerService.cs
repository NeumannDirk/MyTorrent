// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TrackerService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MyTorrent {

  /// <summary>Holder for reflection information generated from TrackerService.proto</summary>
  public static partial class TrackerServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for TrackerService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrackerServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRUcmFja2VyU2VydmljZS5wcm90bxIJTXlUb3JyZW50IhQKEk5ldHdvcmtJ",
            "bmZvUmVxdWVzdCJZChNOZXR3b3JrSW5mb1Jlc3BvbnNlEhQKDEZyYWdtZW50",
            "U2l6ZRgBIAEoAxIVCg1IYXNoQWxnb3JpdGhtGAIgASgJEhUKDVRvcnJlbnRT",
            "ZXJ2ZXIYAyADKAkiJwoTVXBsb2FkU3RhdHVzUmVxdWVzdBIQCghGaWxlSGFz",
            "aBgBIAEoCSI/ChRVcGxvYWRTdGF0dXNSZXNwb25zZRInCgZTdGF0dXMYASAB",
            "KA4yFy5NeVRvcnJlbnQuVXBsb2FkU3RhdHVzIkQKDEZpbGVGcmFnbWVudBIQ",
            "CghGaWxlSGFzaBgBIAEoCRIUCgxGcmFnbWVudEhhc2gYAiABKAkSDAoERGF0",
            "YRgDIAEoDCJBChtGaWxlVXBsb2FkSW5pdGlhdGlvblJlcXVlc3QSEAoIRmls",
            "ZUhhc2gYASABKAkSEAoIRmlsZVNpemUYAiABKAMiHgocRmlsZVVwbG9hZElu",
            "aXRpYXRpb25SZXNwb25zZSInChJGcmFnbWVudEhvbGRlckxpc3QSEQoJRW5k",
            "UG9pbnRzGAEgAygJIscBChJGaWxlVXBsb2FkUmVzcG9uc2USVQoURnJhZ21l",
            "bnREaXN0cmlidXRpb24YASADKAsyNy5NeVRvcnJlbnQuRmlsZVVwbG9hZFJl",
            "c3BvbnNlLkZyYWdtZW50RGlzdHJpYnV0aW9uRW50cnkaWgoZRnJhZ21lbnRE",
            "aXN0cmlidXRpb25FbnRyeRILCgNrZXkYASABKAkSLAoFdmFsdWUYAiABKAsy",
            "HS5NeVRvcnJlbnQuRnJhZ21lbnRIb2xkZXJMaXN0OgI4ASIvChdGcmFnbWVu",
            "dERvd25sb2FkUmVxdWVzdBIUCgxGcmFnbWVudEhhc2gYASABKAkiKAoYRnJh",
            "Z21lbnREb3dubG9hZFJlc3BvbnNlEgwKBERhdGEYASABKAwiKwoXRmlsZURp",
            "c3RyaWJ1dGlvblJlcXVlc3QSEAoIRmlsZUhhc2gYASABKAki6gEKGEZpbGVE",
            "aXN0cmlidXRpb25SZXNwb25zZRIVCg1GcmFnbWVudE9yZGVyGAEgAygJElsK",
            "FEZyYWdtZW50RGlzdHJpYnV0aW9uGAIgAygLMj0uTXlUb3JyZW50LkZpbGVE",
            "aXN0cmlidXRpb25SZXNwb25zZS5GcmFnbWVudERpc3RyaWJ1dGlvbkVudHJ5",
            "GloKGUZyYWdtZW50RGlzdHJpYnV0aW9uRW50cnkSCwoDa2V5GAEgASgJEiwK",
            "BXZhbHVlGAIgASgLMh0uTXlUb3JyZW50LkZyYWdtZW50SG9sZGVyTGlzdDoC",
            "OAEqegoMVXBsb2FkU3RhdHVzEg0KCUluaXRpYXRlZBAAEg0KCVVwbG9hZGlu",
            "ZxABEgwKCENhbmNlbGVkEAISDgoKVmFsaWRhdGluZxADEhAKDERpc3RyaWJ1",
            "dGluZxAEEg8KC0Rpc3RyaWJ1dGVkEAUSCwoHVW5rbm93bhAGMukCCg5UcmFj",
            "a2VyU2VydmljZRJPCg5HZXROZXR3b3JrSW5mbxIdLk15VG9ycmVudC5OZXR3",
            "b3JrSW5mb1JlcXVlc3QaHi5NeVRvcnJlbnQuTmV0d29ya0luZm9SZXNwb25z",
            "ZRJSCg9HZXRVcGxvYWRTdGF0dXMSHi5NeVRvcnJlbnQuVXBsb2FkU3RhdHVz",
            "UmVxdWVzdBofLk15VG9ycmVudC5VcGxvYWRTdGF0dXNSZXNwb25zZRJhCg5J",
            "bml0aWF0ZVVwbG9hZBImLk15VG9ycmVudC5GaWxlVXBsb2FkSW5pdGlhdGlv",
            "blJlcXVlc3QaJy5NeVRvcnJlbnQuRmlsZVVwbG9hZEluaXRpYXRpb25SZXNw",
            "b25zZRJPChNVcGxvYWRGaWxlRnJhZ21lbnRzEhcuTXlUb3JyZW50LkZpbGVG",
            "cmFnbWVudBodLk15VG9ycmVudC5GaWxlVXBsb2FkUmVzcG9uc2UoATLVAQoO",
            "VG9ycmVudFNlcnZpY2USYwoURG93bmxvYWRGaWxlRnJhZ21lbnQSIi5NeVRv",
            "cnJlbnQuRnJhZ21lbnREb3dubG9hZFJlcXVlc3QaIy5NeVRvcnJlbnQuRnJh",
            "Z21lbnREb3dubG9hZFJlc3BvbnNlKAEwARJeChNHZXRGaWxlRGlzdHJpYnV0",
            "aW9uEiIuTXlUb3JyZW50LkZpbGVEaXN0cmlidXRpb25SZXF1ZXN0GiMuTXlU",
            "b3JyZW50LkZpbGVEaXN0cmlidXRpb25SZXNwb25zZUI2Ch1teXRvcnJlbnQu",
            "Z3JwYy50cmFja2Vyc2VydmljZUITVHJhY2tlclNlcnZpY2VQcm90b1ABYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MyTorrent.UploadStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.NetworkInfoRequest), global::MyTorrent.NetworkInfoRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.NetworkInfoResponse), global::MyTorrent.NetworkInfoResponse.Parser, new[]{ "FragmentSize", "HashAlgorithm", "TorrentServer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.UploadStatusRequest), global::MyTorrent.UploadStatusRequest.Parser, new[]{ "FileHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.UploadStatusResponse), global::MyTorrent.UploadStatusResponse.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FileFragment), global::MyTorrent.FileFragment.Parser, new[]{ "FileHash", "FragmentHash", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FileUploadInitiationRequest), global::MyTorrent.FileUploadInitiationRequest.Parser, new[]{ "FileHash", "FileSize" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FileUploadInitiationResponse), global::MyTorrent.FileUploadInitiationResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FragmentHolderList), global::MyTorrent.FragmentHolderList.Parser, new[]{ "EndPoints" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FileUploadResponse), global::MyTorrent.FileUploadResponse.Parser, new[]{ "FragmentDistribution" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FragmentDownloadRequest), global::MyTorrent.FragmentDownloadRequest.Parser, new[]{ "FragmentHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FragmentDownloadResponse), global::MyTorrent.FragmentDownloadResponse.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FileDistributionRequest), global::MyTorrent.FileDistributionRequest.Parser, new[]{ "FileHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MyTorrent.FileDistributionResponse), global::MyTorrent.FileDistributionResponse.Parser, new[]{ "FragmentOrder", "FragmentDistribution" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum UploadStatus {
    /// <summary>
    ///File Upload was initiated. No fragment was uploaded so far.
    /// </summary>
    [pbr::OriginalName("Initiated")] Initiated = 0,
    /// <summary>
    ///File is uploading. Some fragments have already arrived.
    /// </summary>
    [pbr::OriginalName("Uploading")] Uploading = 1,
    /// <summary>
    ///File Upload was canceled for some reason.
    /// </summary>
    [pbr::OriginalName("Canceled")] Canceled = 2,
    /// <summary>
    ///All fragments are uploaded, but the Server still validating the data before distributing it. 
    /// </summary>
    [pbr::OriginalName("Validating")] Validating = 3,
    /// <summary>
    ///The fragments are currently distributed to the torrent servers.
    /// </summary>
    [pbr::OriginalName("Distributing")] Distributing = 4,
    /// <summary>
    ///All fragments are distributed to the torrent servers.
    /// </summary>
    [pbr::OriginalName("Distributed")] Distributed = 5,
    /// <summary>
    ///File is Unknown.
    /// </summary>
    [pbr::OriginalName("Unknown")] Unknown = 6,
  }

  #endregion

  #region Messages
  public sealed partial class NetworkInfoRequest : pb::IMessage<NetworkInfoRequest> {
    private static readonly pb::MessageParser<NetworkInfoRequest> _parser = new pb::MessageParser<NetworkInfoRequest>(() => new NetworkInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInfoRequest(NetworkInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInfoRequest Clone() {
      return new NetworkInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NetworkInfoResponse : pb::IMessage<NetworkInfoResponse> {
    private static readonly pb::MessageParser<NetworkInfoResponse> _parser = new pb::MessageParser<NetworkInfoResponse>(() => new NetworkInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInfoResponse(NetworkInfoResponse other) : this() {
      fragmentSize_ = other.fragmentSize_;
      hashAlgorithm_ = other.hashAlgorithm_;
      torrentServer_ = other.torrentServer_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInfoResponse Clone() {
      return new NetworkInfoResponse(this);
    }

    /// <summary>Field number for the "FragmentSize" field.</summary>
    public const int FragmentSizeFieldNumber = 1;
    private long fragmentSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FragmentSize {
      get { return fragmentSize_; }
      set {
        fragmentSize_ = value;
      }
    }

    /// <summary>Field number for the "HashAlgorithm" field.</summary>
    public const int HashAlgorithmFieldNumber = 2;
    private string hashAlgorithm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashAlgorithm {
      get { return hashAlgorithm_; }
      set {
        hashAlgorithm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TorrentServer" field.</summary>
    public const int TorrentServerFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_torrentServer_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> torrentServer_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TorrentServer {
      get { return torrentServer_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FragmentSize != other.FragmentSize) return false;
      if (HashAlgorithm != other.HashAlgorithm) return false;
      if(!torrentServer_.Equals(other.torrentServer_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FragmentSize != 0L) hash ^= FragmentSize.GetHashCode();
      if (HashAlgorithm.Length != 0) hash ^= HashAlgorithm.GetHashCode();
      hash ^= torrentServer_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FragmentSize != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FragmentSize);
      }
      if (HashAlgorithm.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HashAlgorithm);
      }
      torrentServer_.WriteTo(output, _repeated_torrentServer_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FragmentSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FragmentSize);
      }
      if (HashAlgorithm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashAlgorithm);
      }
      size += torrentServer_.CalculateSize(_repeated_torrentServer_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.FragmentSize != 0L) {
        FragmentSize = other.FragmentSize;
      }
      if (other.HashAlgorithm.Length != 0) {
        HashAlgorithm = other.HashAlgorithm;
      }
      torrentServer_.Add(other.torrentServer_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FragmentSize = input.ReadInt64();
            break;
          }
          case 18: {
            HashAlgorithm = input.ReadString();
            break;
          }
          case 26: {
            torrentServer_.AddEntriesFrom(input, _repeated_torrentServer_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadStatusRequest : pb::IMessage<UploadStatusRequest> {
    private static readonly pb::MessageParser<UploadStatusRequest> _parser = new pb::MessageParser<UploadStatusRequest>(() => new UploadStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadStatusRequest(UploadStatusRequest other) : this() {
      fileHash_ = other.fileHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadStatusRequest Clone() {
      return new UploadStatusRequest(this);
    }

    /// <summary>Field number for the "FileHash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private string fileHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileHash {
      get { return fileHash_; }
      set {
        fileHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileHash != other.FileHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileHash.Length != 0) hash ^= FileHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.FileHash.Length != 0) {
        FileHash = other.FileHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadStatusResponse : pb::IMessage<UploadStatusResponse> {
    private static readonly pb::MessageParser<UploadStatusResponse> _parser = new pb::MessageParser<UploadStatusResponse>(() => new UploadStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadStatusResponse(UploadStatusResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadStatusResponse Clone() {
      return new UploadStatusResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::MyTorrent.UploadStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MyTorrent.UploadStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::MyTorrent.UploadStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileFragment : pb::IMessage<FileFragment> {
    private static readonly pb::MessageParser<FileFragment> _parser = new pb::MessageParser<FileFragment>(() => new FileFragment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileFragment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileFragment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileFragment(FileFragment other) : this() {
      fileHash_ = other.fileHash_;
      fragmentHash_ = other.fragmentHash_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileFragment Clone() {
      return new FileFragment(this);
    }

    /// <summary>Field number for the "FileHash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private string fileHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileHash {
      get { return fileHash_; }
      set {
        fileHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FragmentHash" field.</summary>
    public const int FragmentHashFieldNumber = 2;
    private string fragmentHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FragmentHash {
      get { return fragmentHash_; }
      set {
        fragmentHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 3;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileFragment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileFragment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileHash != other.FileHash) return false;
      if (FragmentHash != other.FragmentHash) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileHash.Length != 0) hash ^= FileHash.GetHashCode();
      if (FragmentHash.Length != 0) hash ^= FragmentHash.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileHash);
      }
      if (FragmentHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FragmentHash);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileHash);
      }
      if (FragmentHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FragmentHash);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileFragment other) {
      if (other == null) {
        return;
      }
      if (other.FileHash.Length != 0) {
        FileHash = other.FileHash;
      }
      if (other.FragmentHash.Length != 0) {
        FragmentHash = other.FragmentHash;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileHash = input.ReadString();
            break;
          }
          case 18: {
            FragmentHash = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileUploadInitiationRequest : pb::IMessage<FileUploadInitiationRequest> {
    private static readonly pb::MessageParser<FileUploadInitiationRequest> _parser = new pb::MessageParser<FileUploadInitiationRequest>(() => new FileUploadInitiationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileUploadInitiationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadInitiationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadInitiationRequest(FileUploadInitiationRequest other) : this() {
      fileHash_ = other.fileHash_;
      fileSize_ = other.fileSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadInitiationRequest Clone() {
      return new FileUploadInitiationRequest(this);
    }

    /// <summary>Field number for the "FileHash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private string fileHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileHash {
      get { return fileHash_; }
      set {
        fileHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileSize" field.</summary>
    public const int FileSizeFieldNumber = 2;
    private long fileSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FileSize {
      get { return fileSize_; }
      set {
        fileSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileUploadInitiationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileUploadInitiationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileHash != other.FileHash) return false;
      if (FileSize != other.FileSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileHash.Length != 0) hash ^= FileHash.GetHashCode();
      if (FileSize != 0L) hash ^= FileSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileHash);
      }
      if (FileSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FileSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileHash);
      }
      if (FileSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FileSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileUploadInitiationRequest other) {
      if (other == null) {
        return;
      }
      if (other.FileHash.Length != 0) {
        FileHash = other.FileHash;
      }
      if (other.FileSize != 0L) {
        FileSize = other.FileSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileHash = input.ReadString();
            break;
          }
          case 16: {
            FileSize = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileUploadInitiationResponse : pb::IMessage<FileUploadInitiationResponse> {
    private static readonly pb::MessageParser<FileUploadInitiationResponse> _parser = new pb::MessageParser<FileUploadInitiationResponse>(() => new FileUploadInitiationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileUploadInitiationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadInitiationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadInitiationResponse(FileUploadInitiationResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadInitiationResponse Clone() {
      return new FileUploadInitiationResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileUploadInitiationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileUploadInitiationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileUploadInitiationResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class FragmentHolderList : pb::IMessage<FragmentHolderList> {
    private static readonly pb::MessageParser<FragmentHolderList> _parser = new pb::MessageParser<FragmentHolderList>(() => new FragmentHolderList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FragmentHolderList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentHolderList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentHolderList(FragmentHolderList other) : this() {
      endPoints_ = other.endPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentHolderList Clone() {
      return new FragmentHolderList(this);
    }

    /// <summary>Field number for the "EndPoints" field.</summary>
    public const int EndPointsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_endPoints_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> endPoints_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> EndPoints {
      get { return endPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FragmentHolderList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FragmentHolderList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endPoints_.Equals(other.endPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      endPoints_.WriteTo(output, _repeated_endPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endPoints_.CalculateSize(_repeated_endPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FragmentHolderList other) {
      if (other == null) {
        return;
      }
      endPoints_.Add(other.endPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endPoints_.AddEntriesFrom(input, _repeated_endPoints_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileUploadResponse : pb::IMessage<FileUploadResponse> {
    private static readonly pb::MessageParser<FileUploadResponse> _parser = new pb::MessageParser<FileUploadResponse>(() => new FileUploadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileUploadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadResponse(FileUploadResponse other) : this() {
      fragmentDistribution_ = other.fragmentDistribution_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileUploadResponse Clone() {
      return new FileUploadResponse(this);
    }

    /// <summary>Field number for the "FragmentDistribution" field.</summary>
    public const int FragmentDistributionFieldNumber = 1;
    private static readonly pbc::MapField<string, global::MyTorrent.FragmentHolderList>.Codec _map_fragmentDistribution_codec
        = new pbc::MapField<string, global::MyTorrent.FragmentHolderList>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::MyTorrent.FragmentHolderList.Parser), 10);
    private readonly pbc::MapField<string, global::MyTorrent.FragmentHolderList> fragmentDistribution_ = new pbc::MapField<string, global::MyTorrent.FragmentHolderList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::MyTorrent.FragmentHolderList> FragmentDistribution {
      get { return fragmentDistribution_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileUploadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileUploadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FragmentDistribution.Equals(other.FragmentDistribution)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FragmentDistribution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fragmentDistribution_.WriteTo(output, _map_fragmentDistribution_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fragmentDistribution_.CalculateSize(_map_fragmentDistribution_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileUploadResponse other) {
      if (other == null) {
        return;
      }
      fragmentDistribution_.Add(other.fragmentDistribution_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fragmentDistribution_.AddEntriesFrom(input, _map_fragmentDistribution_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FragmentDownloadRequest : pb::IMessage<FragmentDownloadRequest> {
    private static readonly pb::MessageParser<FragmentDownloadRequest> _parser = new pb::MessageParser<FragmentDownloadRequest>(() => new FragmentDownloadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FragmentDownloadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentDownloadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentDownloadRequest(FragmentDownloadRequest other) : this() {
      fragmentHash_ = other.fragmentHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentDownloadRequest Clone() {
      return new FragmentDownloadRequest(this);
    }

    /// <summary>Field number for the "FragmentHash" field.</summary>
    public const int FragmentHashFieldNumber = 1;
    private string fragmentHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FragmentHash {
      get { return fragmentHash_; }
      set {
        fragmentHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FragmentDownloadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FragmentDownloadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FragmentHash != other.FragmentHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FragmentHash.Length != 0) hash ^= FragmentHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FragmentHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FragmentHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FragmentHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FragmentHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FragmentDownloadRequest other) {
      if (other == null) {
        return;
      }
      if (other.FragmentHash.Length != 0) {
        FragmentHash = other.FragmentHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FragmentHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FragmentDownloadResponse : pb::IMessage<FragmentDownloadResponse> {
    private static readonly pb::MessageParser<FragmentDownloadResponse> _parser = new pb::MessageParser<FragmentDownloadResponse>(() => new FragmentDownloadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FragmentDownloadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentDownloadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentDownloadResponse(FragmentDownloadResponse other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FragmentDownloadResponse Clone() {
      return new FragmentDownloadResponse(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FragmentDownloadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FragmentDownloadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FragmentDownloadResponse other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileDistributionRequest : pb::IMessage<FileDistributionRequest> {
    private static readonly pb::MessageParser<FileDistributionRequest> _parser = new pb::MessageParser<FileDistributionRequest>(() => new FileDistributionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileDistributionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDistributionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDistributionRequest(FileDistributionRequest other) : this() {
      fileHash_ = other.fileHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDistributionRequest Clone() {
      return new FileDistributionRequest(this);
    }

    /// <summary>Field number for the "FileHash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private string fileHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileHash {
      get { return fileHash_; }
      set {
        fileHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileDistributionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileDistributionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileHash != other.FileHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileHash.Length != 0) hash ^= FileHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FileHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileDistributionRequest other) {
      if (other == null) {
        return;
      }
      if (other.FileHash.Length != 0) {
        FileHash = other.FileHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileDistributionResponse : pb::IMessage<FileDistributionResponse> {
    private static readonly pb::MessageParser<FileDistributionResponse> _parser = new pb::MessageParser<FileDistributionResponse>(() => new FileDistributionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileDistributionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MyTorrent.TrackerServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDistributionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDistributionResponse(FileDistributionResponse other) : this() {
      fragmentOrder_ = other.fragmentOrder_.Clone();
      fragmentDistribution_ = other.fragmentDistribution_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileDistributionResponse Clone() {
      return new FileDistributionResponse(this);
    }

    /// <summary>Field number for the "FragmentOrder" field.</summary>
    public const int FragmentOrderFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_fragmentOrder_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> fragmentOrder_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FragmentOrder {
      get { return fragmentOrder_; }
    }

    /// <summary>Field number for the "FragmentDistribution" field.</summary>
    public const int FragmentDistributionFieldNumber = 2;
    private static readonly pbc::MapField<string, global::MyTorrent.FragmentHolderList>.Codec _map_fragmentDistribution_codec
        = new pbc::MapField<string, global::MyTorrent.FragmentHolderList>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::MyTorrent.FragmentHolderList.Parser), 18);
    private readonly pbc::MapField<string, global::MyTorrent.FragmentHolderList> fragmentDistribution_ = new pbc::MapField<string, global::MyTorrent.FragmentHolderList>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::MyTorrent.FragmentHolderList> FragmentDistribution {
      get { return fragmentDistribution_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileDistributionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileDistributionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fragmentOrder_.Equals(other.fragmentOrder_)) return false;
      if (!FragmentDistribution.Equals(other.FragmentDistribution)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fragmentOrder_.GetHashCode();
      hash ^= FragmentDistribution.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fragmentOrder_.WriteTo(output, _repeated_fragmentOrder_codec);
      fragmentDistribution_.WriteTo(output, _map_fragmentDistribution_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fragmentOrder_.CalculateSize(_repeated_fragmentOrder_codec);
      size += fragmentDistribution_.CalculateSize(_map_fragmentDistribution_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileDistributionResponse other) {
      if (other == null) {
        return;
      }
      fragmentOrder_.Add(other.fragmentOrder_);
      fragmentDistribution_.Add(other.fragmentDistribution_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fragmentOrder_.AddEntriesFrom(input, _repeated_fragmentOrder_codec);
            break;
          }
          case 18: {
            fragmentDistribution_.AddEntriesFrom(input, _map_fragmentDistribution_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
