using Microsoft.Extensions.Options;
using System;
using System.Collections.Generic;
using System.Text;

namespace MyTorrent.HashingServiceProviders.Tests
{
    public class SHA256StandardHashingServiceProviderTests : AbstractHashingServiceProviderTests
    {
        protected override string AlgorithmName => "SHA256";

        protected override int HashValueLength => 64;

        protected override IEnumerable<string> ValidHashValues { get; } = new string[]
        {
            "e68fe78e064700fe6b98e47dc0758a4f966bd027299b685642c607ea376b7d47",
            "E68FE78E064700FE6B98E47DC0758A4F966BD027299B685642C607EA376B7D47",
            "2d2da19605a34e037dbe82173f98a992a530a5fdd53dad882f570d4ba204ef30",
            "2D2DA19605A34E037DBE82173F98A992A530A5FDD53DAD882F570D4BA204EF30",
            "6b1e846dedfbcb4e6237e29492e1d6753b491618c005849dcdfc942df66b7128",
            "6B1E846DEDFBCB4E6237E29492E1D6753B491618C005849DCDFC942DF66B7128",
            "d9b5f58f0b38198293971865a14074f59eba3e82595becbe86ae51f1d9f1f65e",
            "D9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E",
            "0000000000000000000000000000000000000000000000000000000000000000",
            "1111111111111111111111111111111111111111111111111111111111111111",
            "2222222222222222222222222222222222222222222222222222222222222222",
            "3333333333333333333333333333333333333333333333333333333333333333",
            "4444444444444444444444444444444444444444444444444444444444444444",
            "5555555555555555555555555555555555555555555555555555555555555555",
            "6666666666666666666666666666666666666666666666666666666666666666",
            "7777777777777777777777777777777777777777777777777777777777777777",
            "8888888888888888888888888888888888888888888888888888888888888888",
            "9999999999999999999999999999999999999999999999999999999999999999",
            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
            "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
            "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
            "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",
            "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
        };

        protected override IEnumerable<string> InvalidHashValues { get; } = new string[]
        {
            null,
            "",
            "",
            "                                                                ",
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "00000000000000000000000000000000000000000000000000000000000000000",
            "11111111111111111111111111111111111111111111111111111111111111111",
            "22222222222222222222222222222222222222222222222222222222222222222",
            "33333333333333333333333333333333333333333333333333333333333333333",
            "44444444444444444444444444444444444444444444444444444444444444444",
            "55555555555555555555555555555555555555555555555555555555555555555",
            "66666666666666666666666666666666666666666666666666666666666666666",
            "77777777777777777777777777777777777777777777777777777777777777777",
            "88888888888888888888888888888888888888888888888888888888888888888",
            "99999999999999999999999999999999999999999999999999999999999999999",
            "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
            "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
            "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
            "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD",
            "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",
            "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
            " D9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E",
            "D9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E ",
            "\tD9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E",
            "D9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E\t",
            "\nD9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E",
            "D9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E\n",
            "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ",
            "GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG",
            "GHIJKLMNOPQRSTUVWXYZghijklmnopqrstuvwxyzGHIJKLMNOPQRSTUVWXYZghij"
        };

        protected override IEnumerable<(string, string)> NonNormalizedWithNormalizedHashValues { get; } = new (string, string)[]
        {
            ("e68fe78e064700fe6b98e47dc0758a4f966bd027299b685642c607ea376b7d47", "E68FE78E064700FE6B98E47DC0758A4F966BD027299B685642C607EA376B7D47"),
            ("2d2da19605a34e037dbe82173f98a992a530a5fdd53dad882f570d4ba204ef30", "2D2DA19605A34E037DBE82173F98A992A530A5FDD53DAD882F570D4BA204EF30"),
            ("6b1e846dedfbcb4e6237e29492e1d6753b491618c005849dcdfc942df66b7128", "6B1E846DEDFBCB4E6237E29492E1D6753B491618C005849DCDFC942DF66B7128"),
            ("d9b5f58f0b38198293971865a14074f59eba3e82595becbe86ae51f1d9f1f65e", "D9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E"),
            ("0000000000000000000000000000000000000000000000000000000000000000", "0000000000000000000000000000000000000000000000000000000000000000"),
            ("1111111111111111111111111111111111111111111111111111111111111111", "1111111111111111111111111111111111111111111111111111111111111111"),
            ("2222222222222222222222222222222222222222222222222222222222222222", "2222222222222222222222222222222222222222222222222222222222222222"),
            ("3333333333333333333333333333333333333333333333333333333333333333", "3333333333333333333333333333333333333333333333333333333333333333"),
            ("4444444444444444444444444444444444444444444444444444444444444444", "4444444444444444444444444444444444444444444444444444444444444444"),
            ("5555555555555555555555555555555555555555555555555555555555555555", "5555555555555555555555555555555555555555555555555555555555555555"),
            ("6666666666666666666666666666666666666666666666666666666666666666", "6666666666666666666666666666666666666666666666666666666666666666"),
            ("7777777777777777777777777777777777777777777777777777777777777777", "7777777777777777777777777777777777777777777777777777777777777777"),
            ("8888888888888888888888888888888888888888888888888888888888888888", "8888888888888888888888888888888888888888888888888888888888888888"),
            ("9999999999999999999999999999999999999999999999999999999999999999", "9999999999999999999999999999999999999999999999999999999999999999"),
            ("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"),
            ("bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb", "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"),
            ("cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc", "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"),
            ("dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd", "DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"),
            ("eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee", "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"),
            ("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff", "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"),
        };

        protected override IEnumerable<(byte[], string)> ByteDataWithCorrectHashValue { get; } = new (byte[], string)[]
        {
            (new byte[] {  }, "E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855"),
            (new byte[] { 0x00 }, "6E340B9CFFB37A989CA544E6BB780A2C78901D3FB33738768511A30617AFA01D"),
            (new byte[] { 0x54, 0x65, 0x73, 0x74, 0x31, 0x32, 0x33 }, "D9B5F58F0B38198293971865A14074F59EBA3E82595BECBE86AE51F1D9F1F65E"),
            (new byte[] { 0x00, 0x48, 0x61, 0x6c, 0x6c, 0x6f, 0x20, 0x57, 0x65, 0x6c, 0x74, 0x21 }, "5239BE66136612712BAFF53C3F9C918B43A7CE368EA0B6168AE7D069050BC68F"),
            (new byte[] { 0x54, 0x45, 0x53, 0x54 }, "94EE059335E587E501CC4BF90613E0814F00A7B08BC7C648FD865A2AF6A22CC2"),
            (new byte[] { 0x6a, 0x66, 0x6c, 0x6b, 0x64, 0x66, 0x67, 0x68, 0x6c, 0x6b, 0x64, 0x73, 0x67, 0x66, 0x6a, 0x67, 0x6c, 0x3c, 0x61, 0x73, 0x6c, 0x6b, 0xc3, 0xb6, 0x61, 0x73, 0x64, 0x66, 0x67, 0x68, 0x71, 0x77, 0x65, 0x72, 0x74, 0x7a, 0x75, 0x30, 0x39, 0xc3, 0xbc, 0x38, 0x36, 0x38, 0x37, 0x35, 0x33, 0x77, 0x65, 0x34, 0x64, 0x66, 0x76, 0x67, 0x62, 0x20, 0x63, 0x66, 0x72, 0x64, 0x74, 0x6a, 0x68, 0x20, 0x62, 0x2c, 0x76, 0x64, 0x66, 0x6a, 0x67, 0x68, 0x6b, 0x20, 0x76, 0x6b, 0x34, 0x38, 0x37, 0x35, 0x7a, 0x38, 0x68, 0x6c, 0x20, 0x69, 0x61, 0x75, 0x67, 0x68, 0x69, 0x75, 0x7a, 0x74, 0x67, 0x6f, 0x33, 0x34, 0x68, 0x66, 0x73, 0x68, 0x66, 0x69, 0x7a, 0x34, 0x33, 0x30, 0x38, 0x39, 0x37, 0x74, 0x20, 0x74, 0x7a, 0x37, 0x38, 0x75, 0x20, 0x69, 0x20, 0x34, 0x33, 0x20, 0x36, 0x74, 0x35, 0x72, 0x66, 0x67, 0x64, 0x63, 0x76, 0x62, 0x6e, 0x68, 0x6d, 0x6a, 0x2c, 0x6b, 0x69, 0x6c, 0x6f, 0x39, 0x38, 0x6f, 0x75, 0x37, 0x6b, 0x7a, 0x6a, 0x74, 0x67, 0x35, 0x66, 0x72, 0x62, 0x20, 0x6e, 0x6d, 0x6d, 0x2c, 0x2e, 0x6c, 0x6f, 0x5d, 0x69, 0x30, 0x6b, 0x6a, 0x66, 0x6c, 0x6b, 0x64, 0x66, 0x67, 0x68, 0x6c, 0x6b, 0x64, 0x73, 0x67, 0x66, 0x6a, 0x67, 0x6c, 0x3c, 0x61, 0x73, 0x6c, 0x6b, 0xc3, 0xb6, 0x61, 0x73, 0x64, 0x66, 0x67, 0x68, 0x71, 0x77, 0x65, 0x72, 0x74, 0x7a, 0x75, 0x30, 0x39, 0xc3, 0xbc, 0x38, 0x36, 0x38, 0x37, 0x35, 0x33, 0x77, 0x65, 0x34, 0x64, 0x66, 0x76, 0x67, 0x62, 0x20, 0x63, 0x66, 0x72, 0x64, 0x74, 0x6a, 0x68, 0x20, 0x62, 0x2c, 0x76, 0x64, 0x66, 0x6a, 0x67, 0x68, 0x6b, 0x20, 0x76, 0x6b, 0x34, 0x38, 0x37, 0x35, 0x7a, 0x38, 0x68, 0x6c, 0x20, 0x69, 0x61, 0x75, 0x67, 0x68, 0x69, 0x75, 0x7a, 0x74, 0x67, 0x6f, 0x33, 0x34, 0x68, 0x66, 0x73, 0x68, 0x66, 0x69, 0x7a, 0x34, 0x33, 0x30, 0x38, 0x39, 0x37, 0x74, 0x20, 0x74, 0x7a, 0x37, 0x38, 0x75, 0x20, 0x69, 0x20, 0x34, 0x33, 0x20, 0x36, 0x74, 0x35, 0x72, 0x66, 0x67, 0x64, 0x63, 0x76, 0x62, 0x6e, 0x68, 0x6d, 0x6a, 0x2c, 0x6b, 0x69, 0x6c, 0x6f, 0x39, 0x38, 0x6f, 0x75, 0x37, 0x6b, 0x7a, 0x6a, 0x74, 0x67, 0x35, 0x66, 0x72, 0x62, 0x20, 0x6e, 0x6d, 0x6d, 0x2c, 0x2e, 0x6c, 0x6f, 0x5d, 0x69, 0x30, 0x6b, 0x6a, 0x66, 0x6c, 0x6b, 0x64, 0x66, 0x67, 0x68, 0x6c, 0x6b, 0x64, 0x73, 0x67, 0x66, 0x6a, 0x67, 0x6c, 0x3c, 0x61, 0x73, 0x6c, 0x6b, 0xc3, 0xb6, 0x61, 0x73, 0x64, 0x66, 0x67, 0x68, 0x71, 0x77, 0x65, 0x72, 0x74, 0x7a, 0x75, 0x30, 0x39, 0xc3, 0xbc, 0x38, 0x36, 0x38, 0x37, 0x35, 0x33, 0x77, 0x65, 0x34, 0x64, 0x66, 0x76, 0x67, 0x62, 0x20, 0x63, 0x66, 0x72, 0x64, 0x74, 0x6a, 0x68, 0x20, 0x62, 0x2c, 0x76, 0x64, 0x66, 0x6a, 0x67, 0x68, 0x6b, 0x20, 0x76, 0x6b, 0x34, 0x38, 0x37, 0x35, 0x7a, 0x38, 0x68, 0x6c, 0x20, 0x69, 0x61, 0x75, 0x67, 0x68, 0x69, 0x75, 0x7a, 0x74, 0x67, 0x6f, 0x33, 0x34, 0x68, 0x66, 0x73, 0x68, 0x66, 0x69, 0x7a, 0x34, 0x33, 0x30, 0x38, 0x39, 0x37, 0x74, 0x20, 0x74, 0x7a, 0x37, 0x38, 0x75, 0x20, 0x69, 0x20, 0x34, 0x33, 0x20, 0x36, 0x74, 0x35, 0x72, 0x66, 0x67, 0x64, 0x63, 0x76, 0x62, 0x6e, 0x68, 0x6d, 0x6a, 0x2c, 0x6b, 0x69, 0x6c, 0x6f, 0x39, 0x38, 0x6f, 0x75, 0x37, 0x6b, 0x7a, 0x6a, 0x74, 0x67, 0x35, 0x66, 0x72, 0x62, 0x20, 0x6e, 0x6d, 0x6d, 0x2c, 0x2e, 0x6c, 0x6f, 0x5d, 0x69, 0x30, 0x6b, 0x6a, 0x66, 0x6c, 0x6b, 0x64, 0x66, 0x67, 0x68, 0x6c, 0x6b, 0x64, 0x73, 0x67, 0x66, 0x6a, 0x67, 0x6c, 0x3c, 0x61, 0x73, 0x6c, 0x6b, 0xc3, 0xb6, 0x61, 0x73, 0x64, 0x66, 0x67, 0x68, 0x71, 0x77, 0x65, 0x72, 0x74, 0x7a, 0x75, 0x30, 0x39, 0xc3, 0xbc, 0x38, 0x36, 0x38, 0x37, 0x35, 0x33, 0x77, 0x65, 0x34, 0x64, 0x66, 0x76, 0x67, 0x62, 0x20, 0x63, 0x66, 0x72, 0x64, 0x74, 0x6a, 0x68, 0x20, 0x62, 0x2c, 0x76, 0x64, 0x66, 0x6a, 0x67, 0x68, 0x6b, 0x20, 0x76, 0x6b, 0x34, 0x38, 0x37, 0x35, 0x7a, 0x38, 0x68, 0x6c, 0x20, 0x69, 0x61, 0x75, 0x67, 0x68, 0x69, 0x75, 0x7a, 0x74, 0x67, 0x6f, 0x33, 0x34, 0x68, 0x66, 0x73, 0x68, 0x66, 0x69, 0x7a, 0x34, 0x33, 0x30, 0x38, 0x39, 0x37, 0x74, 0x20, 0x74, 0x7a, 0x37, 0x38, 0x75, 0x20, 0x69, 0x20, 0x34, 0x33, 0x20, 0x36, 0x74, 0x35, 0x72, 0x66, 0x67, 0x64, 0x63, 0x76, 0x62, 0x6e, 0x68, 0x6d, 0x6a, 0x2c, 0x6b, 0x69, 0x6c, 0x6f, 0x39, 0x38, 0x6f, 0x75, 0x37, 0x6b, 0x7a, 0x6a, 0x74, 0x67, 0x35, 0x66, 0x72, 0x62, 0x20, 0x6e, 0x6d, 0x6d, 0x2c, 0x2e, 0x6c, 0x6f, 0x5d, 0x69, 0x30, 0x6b}, "9797130FDE4143C166066980C50893B9213A9D1646BCFABEB8252C01AF163D5F")
        };

        protected override IHashingServiceProvider GetInstance()
        {
            IOptions<StandardHashingServiceProviderOptions> options = Options.Create<StandardHashingServiceProviderOptions>(new StandardHashingServiceProviderOptions
            {
                HashAlgorithm = "SHA256"
            });

            return new StandardHashingServiceProvider(options);
        }
    }
}
