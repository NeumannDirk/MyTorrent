package TrackerServer;


/**
* TrackerServer/_ITrackerServerStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from MyTorrent.idl
* Mittwoch, 8. Januar 2020 15:41 Uhr MEZ
*/

public class _ITrackerServerStub extends org.omg.CORBA.portable.ObjectImpl implements TrackerServer.ITrackerServer
{

  public TrackerServer.NetworkInfo GetNetworkInfo ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetNetworkInfo", true);
                $in = _invoke ($out);
                TrackerServer.NetworkInfo $result = TrackerServer.NetworkInfoHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetNetworkInfo (        );
            } finally {
                _releaseReply ($in);
            }
  } // GetNetworkInfo

  public TrackerServer.UploadStatus GetUploadStatus (String fileHash)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("GetUploadStatus", true);
                $out.write_string (fileHash);
                $in = _invoke ($out);
                TrackerServer.UploadStatus $result = TrackerServer.UploadStatusHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return GetUploadStatus (fileHash        );
            } finally {
                _releaseReply ($in);
            }
  } // GetUploadStatus

  public void InitiateUpload (int size, String hash)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("InitiateUpload", true);
                $out.write_long (size);
                $out.write_string (hash);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                InitiateUpload (size, hash        );
            } finally {
                _releaseReply ($in);
            }
  } // InitiateUpload

  public void UploadFragment (TrackerServer.FragmentInfo info, char[] fragment)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("UploadFragment", true);
                TrackerServer.FragmentInfoHelper.write ($out, info);
                TrackerServer.DataHelper.write ($out, fragment);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                UploadFragment (info, fragment        );
            } finally {
                _releaseReply ($in);
            }
  } // UploadFragment

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:TrackerServer/ITrackerServer:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _ITrackerServerStub
