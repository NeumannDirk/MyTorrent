syntax="proto3";

package MyTorrent;

option java_multiple_files = true;
option java_package = "mytorrent.grpc.trackerservice";
option java_outer_classname = "TrackerServiceProto";

message NetworkInfoRequest
{
}

message NetworkInfoResponse
{
    int64 FragmentSize = 1;
	string HashAlgorithm = 2;
    repeated string TorrentServer = 3;
}

message UploadStatusRequest
{
    string FileHash = 1;
}

enum UploadStatus {
    Initiated = 0;		//File Upload was initiated. No fragment was uploaded so far.
    Uploading = 1;		//File ist uploading. Some fragments have already arrived.
    Canceled = 2;		//File Upload was canceled for some reason.
    Validating = 3;     //All fragments are uploaded, but the Server still validating the data before distributing it. 
    Distributing = 4;	//The fragments are currently distributed to the torrent servers.
    Distributed = 5;	//All fragments are distributed to the torrent servers.
	Unknown = 6;		//File is Unknown.
}

message UploadStatusResponse
{
    UploadStatus Status = 1;
}

message FileFragment
{
	string FileHash = 1;
    string FragmentHash = 2;
    bytes Data = 3;
}

message FileUploadInitiationRequest
{
    string FileHash = 1;
    int64 FileSize = 2;
}

message FileUploadInitiationResponse
{
}

message FragmentHolderList
{
	repeated string EndPoints = 1;
}

message FileUploadResponse
{
    map<string, FragmentHolderList> FragmentDistribution = 1;
}

service TrackerService
{
    rpc GetNetworkInfo(NetworkInfoRequest) returns (NetworkInfoResponse);
    rpc GetUploadStatus(UploadStatusRequest) returns (UploadStatusResponse);
    rpc InitiateUpload(FileUploadInitiationRequest) returns (FileUploadInitiationResponse);
	rpc UploadFileFragments(stream FileFragment) returns (FileUploadResponse);
}